#!/bin/sh
# TortoiseSVN killer...
# Use "svn cat" to retreve related files, then employ dirdiff as diff utility.

get_svn_log()
{
	SVN_LOG=`svn log -q 2> /dev/null| grep "^r" | cut -d ' ' -f 1 | head -n $1`
}

get_caret_range()
{
	CARET=`echo -n ${1#HEAD} | wc -m`

	get_svn_log $((CARET + 1))

	IFS=''
	cur_revision=`echo $SVN_LOG | head -1`
	pre_revision=`echo $SVN_LOG | tail -1`
	unset IFS
}

get_num_range()
{
	RANGE=${1#HEAD\~}

	get_svn_log $(($RANGE + 1))

	IFS=''
	cur_revision=`echo $SVN_LOG | head -1`
	pre_revision=`echo $SVN_LOG | tail -1`
	unset IFS
}

help()
{
	echo "Usage: $PROGNAME <revision|HEAD^^^...|HEAD~number|revision1..revision2]"
}

PROGNAME=`basename $0`

if [ $# -lt 1 ]; then
    help
    exit 1
fi

if echo $1 | grep -q "\.\."; then
	cur_revision=`echo $1 | cut -d '.' -f 1`
	pre_revision=`echo $1 | cut -d '.' -f 3`
elif echo $1 | grep -q "\-r"; then
	r_dashr="-r"
	cur_revision="r"${1/${r_dashr}/}
	pre_revision="r"$((${1/${r_dashr}/}-1))
elif echo $1 | grep -q "r"; then
	r_dashr="r"
	cur_revision="r"${1/${r_dashr}/}
	pre_revision="r"$((${1/${r_dashr}/}-1))
elif echo $1 | grep -q "^HEAD\^\+"; then
	get_caret_range $1
elif echo $1 | grep -q "^HEAD~"; then
	get_num_range $1
else
	help
	exit 1
fi

echo "cur: $cur_revision pre: $pre_revision"

# Using tmpfs for high performance I/O
[ -d "/dev/shm" ] && tmpdir="/dev/shm" || tmpdir="/tmp" 

cur_tmpdir="${tmpdir}/${cur_revision}"
pre_tmpdir="${tmpdir}/${pre_revision}"

export LC_ALL=POSIX 
repo_root=`svn info 2> /dev/null | grep "^Repository Root:" | sed -e "s/^Repository Root: //"`
[ -z "${repo_root}" ] && repo_root="http://rd1-1/subversion"

if [ -n "$r_dashr" ]; then
	filelist=`svn log -v -r${cur_revision} ${repo_root} | grep "^   [A|M]" | awk '{print $2}'`
else
	repo_url=`svn info 2> /dev/null | grep "^URL:" | sed -e "s/^URL: //"`
	filelist=`svn log -v -r${pre_revision}:${cur_revision} ${repo_url} | grep "^   [A|M]" | awk '{print $2}'`
fi

mkdir ${cur_tmpdir} ${pre_tmpdir}
for filepath in ${filelist}; do
	#echo $repo_root/$filepath
	svn cat -r ${cur_revision} ${repo_root}/${filepath} > ${cur_tmpdir}/`basename $filepath` 2> /dev/null 
	svn cat -r ${pre_revision} ${repo_root}/${filepath} > ${pre_tmpdir}/`basename $filepath` 2> /dev/null
done

# Remove empty file generated by "svn cat" a non-exist file[@REV] or a directory, e.g.
# A /foo          --> Directory
# A /foo/bar.h    --> New file
find ${cur_tmpdir} ${pre_tmpdir} -type f -size 0 -exec rm -rf '{}' \;

vim -c "let g:DirDiffAddArgs=''" -c "DirDiff ${cur_tmpdir} ${pre_tmpdir}"

trap "rm -rf ${cur_tmpdir} ${pre_tmpdir}" 0 1 2 15

rm -rf ${cur_tmpdir} ${pre_tmpdir}
